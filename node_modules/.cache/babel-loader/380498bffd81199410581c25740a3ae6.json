{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar MonotonicInterpolant =\n/** @class */\nfunction () {\n  function MonotonicInterpolant(xs, ys) {\n    var length = xs.length; // Rearrange xs and ys so that xs is sorted\n\n    var indexes = [];\n\n    for (var i = 0; i < length; i++) {\n      indexes.push(i);\n    }\n\n    indexes.sort(function (a, b) {\n      return xs[a] < xs[b] ? -1 : 1;\n    }); // Get consecutive differences and slopes\n\n    var dys = [];\n    var dxs = [];\n    var ms = [];\n    var dx;\n    var dy;\n\n    for (var i = 0; i < length - 1; i++) {\n      dx = xs[i + 1] - xs[i];\n      dy = ys[i + 1] - ys[i];\n      dxs.push(dx);\n      dys.push(dy);\n      ms.push(dy / dx);\n    } // Get degree-1 coefficients\n\n\n    var c1s = [ms[0]];\n\n    for (var i = 0; i < dxs.length - 1; i++) {\n      var m2 = ms[i];\n      var mNext = ms[i + 1];\n\n      if (m2 * mNext <= 0) {\n        c1s.push(0);\n      } else {\n        dx = dxs[i];\n        var dxNext = dxs[i + 1];\n        var common = dx + dxNext;\n        c1s.push(3 * common / ((common + dxNext) / m2 + (common + dx) / mNext));\n      }\n    }\n\n    c1s.push(ms[ms.length - 1]); // Get degree-2 and degree-3 coefficients\n\n    var c2s = [];\n    var c3s = [];\n    var m;\n\n    for (var i = 0; i < c1s.length - 1; i++) {\n      m = ms[i];\n      var c1 = c1s[i];\n      var invDx = 1 / dxs[i];\n      var common = c1 + c1s[i + 1] - m - m;\n      c2s.push((m - c1 - common) * invDx);\n      c3s.push(common * invDx * invDx);\n    }\n\n    this.xs = xs;\n    this.ys = ys;\n    this.c1s = c1s;\n    this.c2s = c2s;\n    this.c3s = c3s;\n  }\n\n  MonotonicInterpolant.prototype.interpolate = function (x) {\n    var _a = this,\n        xs = _a.xs,\n        ys = _a.ys,\n        c1s = _a.c1s,\n        c2s = _a.c2s,\n        c3s = _a.c3s; // The rightmost point in the dataset should give an exact result\n\n\n    var i = xs.length - 1;\n\n    if (x === xs[i]) {\n      return ys[i];\n    } // Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\n\n    var low = 0;\n    var high = c3s.length - 1;\n    var mid;\n\n    while (low <= high) {\n      mid = Math.floor(0.5 * (low + high));\n      var xHere = xs[mid];\n\n      if (xHere < x) {\n        low = mid + 1;\n      } else if (xHere > x) {\n        high = mid - 1;\n      } else {\n        return ys[mid];\n      }\n    }\n\n    i = Math.max(0, high); // Interpolate\n\n    var diff = x - xs[i];\n    var diffSq = diff * diff;\n    return ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq;\n  };\n\n  return MonotonicInterpolant;\n}();\n\nexports.default = MonotonicInterpolant;","map":{"version":3,"names":["Object","defineProperty","exports","value","MonotonicInterpolant","xs","ys","length","indexes","i","push","sort","a","b","dys","dxs","ms","dx","dy","c1s","m2","mNext","dxNext","common","c2s","c3s","m","c1","invDx","prototype","interpolate","x","_a","low","high","mid","Math","floor","xHere","max","diff","diffSq","default"],"sources":["C:/Users/rytways/Downloads/simple-kanban-board/node_modules/react-dnd-html5-backend/lib/MonotonicInterpolant.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MonotonicInterpolant = /** @class */ (function () {\n    function MonotonicInterpolant(xs, ys) {\n        var length = xs.length;\n        // Rearrange xs and ys so that xs is sorted\n        var indexes = [];\n        for (var i = 0; i < length; i++) {\n            indexes.push(i);\n        }\n        indexes.sort(function (a, b) { return (xs[a] < xs[b] ? -1 : 1); });\n        // Get consecutive differences and slopes\n        var dys = [];\n        var dxs = [];\n        var ms = [];\n        var dx;\n        var dy;\n        for (var i = 0; i < length - 1; i++) {\n            dx = xs[i + 1] - xs[i];\n            dy = ys[i + 1] - ys[i];\n            dxs.push(dx);\n            dys.push(dy);\n            ms.push(dy / dx);\n        }\n        // Get degree-1 coefficients\n        var c1s = [ms[0]];\n        for (var i = 0; i < dxs.length - 1; i++) {\n            var m2 = ms[i];\n            var mNext = ms[i + 1];\n            if (m2 * mNext <= 0) {\n                c1s.push(0);\n            }\n            else {\n                dx = dxs[i];\n                var dxNext = dxs[i + 1];\n                var common = dx + dxNext;\n                c1s.push(3 * common / ((common + dxNext) / m2 + (common + dx) / mNext));\n            }\n        }\n        c1s.push(ms[ms.length - 1]);\n        // Get degree-2 and degree-3 coefficients\n        var c2s = [];\n        var c3s = [];\n        var m;\n        for (var i = 0; i < c1s.length - 1; i++) {\n            m = ms[i];\n            var c1 = c1s[i];\n            var invDx = 1 / dxs[i];\n            var common = c1 + c1s[i + 1] - m - m;\n            c2s.push((m - c1 - common) * invDx);\n            c3s.push(common * invDx * invDx);\n        }\n        this.xs = xs;\n        this.ys = ys;\n        this.c1s = c1s;\n        this.c2s = c2s;\n        this.c3s = c3s;\n    }\n    MonotonicInterpolant.prototype.interpolate = function (x) {\n        var _a = this, xs = _a.xs, ys = _a.ys, c1s = _a.c1s, c2s = _a.c2s, c3s = _a.c3s;\n        // The rightmost point in the dataset should give an exact result\n        var i = xs.length - 1;\n        if (x === xs[i]) {\n            return ys[i];\n        }\n        // Search for the interval x is in, returning the corresponding y if x is one of the original xs\n        var low = 0;\n        var high = c3s.length - 1;\n        var mid;\n        while (low <= high) {\n            mid = Math.floor(0.5 * (low + high));\n            var xHere = xs[mid];\n            if (xHere < x) {\n                low = mid + 1;\n            }\n            else if (xHere > x) {\n                high = mid - 1;\n            }\n            else {\n                return ys[mid];\n            }\n        }\n        i = Math.max(0, high);\n        // Interpolate\n        var diff = x - xs[i];\n        var diffSq = diff * diff;\n        return ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq;\n    };\n    return MonotonicInterpolant;\n}());\nexports.default = MonotonicInterpolant;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,oBAAoB;AAAG;AAAe,YAAY;EAClD,SAASA,oBAAT,CAA8BC,EAA9B,EAAkCC,EAAlC,EAAsC;IAClC,IAAIC,MAAM,GAAGF,EAAE,CAACE,MAAhB,CADkC,CAElC;;IACA,IAAIC,OAAO,GAAG,EAAd;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;MAC7BD,OAAO,CAACE,IAAR,CAAaD,CAAb;IACH;;IACDD,OAAO,CAACG,IAAR,CAAa,UAAUC,CAAV,EAAaC,CAAb,EAAgB;MAAE,OAAQR,EAAE,CAACO,CAAD,CAAF,GAAQP,EAAE,CAACQ,CAAD,CAAV,GAAgB,CAAC,CAAjB,GAAqB,CAA7B;IAAkC,CAAjE,EAPkC,CAQlC;;IACA,IAAIC,GAAG,GAAG,EAAV;IACA,IAAIC,GAAG,GAAG,EAAV;IACA,IAAIC,EAAE,GAAG,EAAT;IACA,IAAIC,EAAJ;IACA,IAAIC,EAAJ;;IACA,KAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,GAAG,CAA7B,EAAgCE,CAAC,EAAjC,EAAqC;MACjCQ,EAAE,GAAGZ,EAAE,CAACI,CAAC,GAAG,CAAL,CAAF,GAAYJ,EAAE,CAACI,CAAD,CAAnB;MACAS,EAAE,GAAGZ,EAAE,CAACG,CAAC,GAAG,CAAL,CAAF,GAAYH,EAAE,CAACG,CAAD,CAAnB;MACAM,GAAG,CAACL,IAAJ,CAASO,EAAT;MACAH,GAAG,CAACJ,IAAJ,CAASQ,EAAT;MACAF,EAAE,CAACN,IAAH,CAAQQ,EAAE,GAAGD,EAAb;IACH,CApBiC,CAqBlC;;;IACA,IAAIE,GAAG,GAAG,CAACH,EAAE,CAAC,CAAD,CAAH,CAAV;;IACA,KAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,GAAG,CAACR,MAAJ,GAAa,CAAjC,EAAoCE,CAAC,EAArC,EAAyC;MACrC,IAAIW,EAAE,GAAGJ,EAAE,CAACP,CAAD,CAAX;MACA,IAAIY,KAAK,GAAGL,EAAE,CAACP,CAAC,GAAG,CAAL,CAAd;;MACA,IAAIW,EAAE,GAAGC,KAAL,IAAc,CAAlB,EAAqB;QACjBF,GAAG,CAACT,IAAJ,CAAS,CAAT;MACH,CAFD,MAGK;QACDO,EAAE,GAAGF,GAAG,CAACN,CAAD,CAAR;QACA,IAAIa,MAAM,GAAGP,GAAG,CAACN,CAAC,GAAG,CAAL,CAAhB;QACA,IAAIc,MAAM,GAAGN,EAAE,GAAGK,MAAlB;QACAH,GAAG,CAACT,IAAJ,CAAS,IAAIa,MAAJ,IAAc,CAACA,MAAM,GAAGD,MAAV,IAAoBF,EAApB,GAAyB,CAACG,MAAM,GAAGN,EAAV,IAAgBI,KAAvD,CAAT;MACH;IACJ;;IACDF,GAAG,CAACT,IAAJ,CAASM,EAAE,CAACA,EAAE,CAACT,MAAH,GAAY,CAAb,CAAX,EApCkC,CAqClC;;IACA,IAAIiB,GAAG,GAAG,EAAV;IACA,IAAIC,GAAG,GAAG,EAAV;IACA,IAAIC,CAAJ;;IACA,KAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,GAAG,CAACZ,MAAJ,GAAa,CAAjC,EAAoCE,CAAC,EAArC,EAAyC;MACrCiB,CAAC,GAAGV,EAAE,CAACP,CAAD,CAAN;MACA,IAAIkB,EAAE,GAAGR,GAAG,CAACV,CAAD,CAAZ;MACA,IAAImB,KAAK,GAAG,IAAIb,GAAG,CAACN,CAAD,CAAnB;MACA,IAAIc,MAAM,GAAGI,EAAE,GAAGR,GAAG,CAACV,CAAC,GAAG,CAAL,CAAR,GAAkBiB,CAAlB,GAAsBA,CAAnC;MACAF,GAAG,CAACd,IAAJ,CAAS,CAACgB,CAAC,GAAGC,EAAJ,GAASJ,MAAV,IAAoBK,KAA7B;MACAH,GAAG,CAACf,IAAJ,CAASa,MAAM,GAAGK,KAAT,GAAiBA,KAA1B;IACH;;IACD,KAAKvB,EAAL,GAAUA,EAAV;IACA,KAAKC,EAAL,GAAUA,EAAV;IACA,KAAKa,GAAL,GAAWA,GAAX;IACA,KAAKK,GAAL,GAAWA,GAAX;IACA,KAAKC,GAAL,GAAWA,GAAX;EACH;;EACDrB,oBAAoB,CAACyB,SAArB,CAA+BC,WAA/B,GAA6C,UAAUC,CAAV,EAAa;IACtD,IAAIC,EAAE,GAAG,IAAT;IAAA,IAAe3B,EAAE,GAAG2B,EAAE,CAAC3B,EAAvB;IAAA,IAA2BC,EAAE,GAAG0B,EAAE,CAAC1B,EAAnC;IAAA,IAAuCa,GAAG,GAAGa,EAAE,CAACb,GAAhD;IAAA,IAAqDK,GAAG,GAAGQ,EAAE,CAACR,GAA9D;IAAA,IAAmEC,GAAG,GAAGO,EAAE,CAACP,GAA5E,CADsD,CAEtD;;;IACA,IAAIhB,CAAC,GAAGJ,EAAE,CAACE,MAAH,GAAY,CAApB;;IACA,IAAIwB,CAAC,KAAK1B,EAAE,CAACI,CAAD,CAAZ,EAAiB;MACb,OAAOH,EAAE,CAACG,CAAD,CAAT;IACH,CANqD,CAOtD;;;IACA,IAAIwB,GAAG,GAAG,CAAV;IACA,IAAIC,IAAI,GAAGT,GAAG,CAAClB,MAAJ,GAAa,CAAxB;IACA,IAAI4B,GAAJ;;IACA,OAAOF,GAAG,IAAIC,IAAd,EAAoB;MAChBC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,OAAOJ,GAAG,GAAGC,IAAb,CAAX,CAAN;MACA,IAAII,KAAK,GAAGjC,EAAE,CAAC8B,GAAD,CAAd;;MACA,IAAIG,KAAK,GAAGP,CAAZ,EAAe;QACXE,GAAG,GAAGE,GAAG,GAAG,CAAZ;MACH,CAFD,MAGK,IAAIG,KAAK,GAAGP,CAAZ,EAAe;QAChBG,IAAI,GAAGC,GAAG,GAAG,CAAb;MACH,CAFI,MAGA;QACD,OAAO7B,EAAE,CAAC6B,GAAD,CAAT;MACH;IACJ;;IACD1B,CAAC,GAAG2B,IAAI,CAACG,GAAL,CAAS,CAAT,EAAYL,IAAZ,CAAJ,CAxBsD,CAyBtD;;IACA,IAAIM,IAAI,GAAGT,CAAC,GAAG1B,EAAE,CAACI,CAAD,CAAjB;IACA,IAAIgC,MAAM,GAAGD,IAAI,GAAGA,IAApB;IACA,OAAOlC,EAAE,CAACG,CAAD,CAAF,GAAQU,GAAG,CAACV,CAAD,CAAH,GAAS+B,IAAjB,GAAwBhB,GAAG,CAACf,CAAD,CAAH,GAASgC,MAAjC,GAA0ChB,GAAG,CAAChB,CAAD,CAAH,GAAS+B,IAAT,GAAgBC,MAAjE;EACH,CA7BD;;EA8BA,OAAOrC,oBAAP;AACH,CAvFyC,EAA1C;;AAwFAF,OAAO,CAACwC,OAAR,GAAkBtC,oBAAlB"},"metadata":{},"sourceType":"script"}