{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar invariant = require('invariant');\n\nfunction setRef(ref, node) {\n  if (typeof ref === 'function') {\n    ref(node);\n  } else {\n    ref.current = node;\n  }\n}\n\nfunction cloneWithRef(element, newRef) {\n  var previousRef = element.ref;\n  invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' + 'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' + 'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n\n  if (!previousRef) {\n    // When there is no ref on the element, use the new ref directly\n    return react_1.cloneElement(element, {\n      ref: newRef\n    });\n  }\n\n  return react_1.cloneElement(element, {\n    ref: function ref(node) {\n      setRef(newRef, node);\n\n      if (previousRef) {\n        setRef(previousRef, node);\n      }\n    }\n  });\n}\n\nexports.default = cloneWithRef;","map":{"version":3,"names":["Object","defineProperty","exports","value","react_1","require","invariant","setRef","ref","node","current","cloneWithRef","element","newRef","previousRef","cloneElement","default"],"sources":["C:/Users/rytways/Downloads/simple-kanban-board/node_modules/react-dnd/lib/cjs/utils/cloneWithRef.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar invariant = require('invariant');\nfunction setRef(ref, node) {\n    if (typeof ref === 'function') {\n        ref(node);\n    }\n    else {\n        ref.current = node;\n    }\n}\nfunction cloneWithRef(element, newRef) {\n    var previousRef = element.ref;\n    invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' +\n        'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n        'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n    if (!previousRef) {\n        // When there is no ref on the element, use the new ref directly\n        return react_1.cloneElement(element, {\n            ref: newRef,\n        });\n    }\n    return react_1.cloneElement(element, {\n        ref: function (node) {\n            setRef(newRef, node);\n            if (previousRef) {\n                setRef(previousRef, node);\n            }\n        },\n    });\n}\nexports.default = cloneWithRef;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,SAASE,MAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;EACvB,IAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;IAC3BA,GAAG,CAACC,IAAD,CAAH;EACH,CAFD,MAGK;IACDD,GAAG,CAACE,OAAJ,GAAcD,IAAd;EACH;AACJ;;AACD,SAASE,YAAT,CAAsBC,OAAtB,EAA+BC,MAA/B,EAAuC;EACnC,IAAIC,WAAW,GAAGF,OAAO,CAACJ,GAA1B;EACAF,SAAS,CAAC,OAAOQ,WAAP,KAAuB,QAAxB,EAAkC,yEACvC,sFADuC,GAEvC,kGAFK,CAAT;;EAGA,IAAI,CAACA,WAAL,EAAkB;IACd;IACA,OAAOV,OAAO,CAACW,YAAR,CAAqBH,OAArB,EAA8B;MACjCJ,GAAG,EAAEK;IAD4B,CAA9B,CAAP;EAGH;;EACD,OAAOT,OAAO,CAACW,YAAR,CAAqBH,OAArB,EAA8B;IACjCJ,GAAG,EAAE,aAAUC,IAAV,EAAgB;MACjBF,MAAM,CAACM,MAAD,EAASJ,IAAT,CAAN;;MACA,IAAIK,WAAJ,EAAiB;QACbP,MAAM,CAACO,WAAD,EAAcL,IAAd,CAAN;MACH;IACJ;EANgC,CAA9B,CAAP;AAQH;;AACDP,OAAO,CAACc,OAAR,GAAkBL,YAAlB"},"metadata":{},"sourceType":"script"}