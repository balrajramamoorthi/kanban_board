{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar cloneWithRef_1 = require(\"./utils/cloneWithRef\");\n\nrequire(\"./utils/polyfills/endsWith\");\n\nfunction throwIfCompositeComponentElement(element) {\n  // Custom components can no longer be wrapped directly in React DnD 2.0\n  // so that we don't need to depend on findDOMNode() from react-dom.\n  if (typeof element.type === 'string') {\n    return;\n  }\n\n  var displayName = element.type.displayName || element.type.name || 'the component';\n  throw new Error('Only native element nodes can now be passed to React DnD connectors.' + (\"You can either wrap \" + displayName + \" into a <div>, or turn it into a \") + 'drag source or a drop target itself.');\n}\n\nfunction wrapHookToRecognizeElement(hook) {\n  return function (elementOrNode, options) {\n    if (elementOrNode === void 0) {\n      elementOrNode = null;\n    }\n\n    if (options === void 0) {\n      options = null;\n    } // When passed a node, call the hook straight away.\n\n\n    if (!react_1.isValidElement(elementOrNode)) {\n      var node = elementOrNode;\n      hook(node, options); // return the node so it can be chained (e.g. when within callback refs\n      // <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\n      return node;\n    } // If passed a ReactElement, clone it and attach this function as a ref.\n    // This helps us achieve a neat API where user doesn't even know that refs\n    // are being used under the hood.\n\n\n    var element = elementOrNode;\n    throwIfCompositeComponentElement(element); // When no options are passed, use the hook directly\n\n    var ref = options ? function (node) {\n      return hook(node, options);\n    } : hook;\n    return cloneWithRef_1.default(element, ref);\n  };\n}\n\nfunction wrapConnectorHooks(hooks) {\n  var wrappedHooks = {};\n  Object.keys(hooks).forEach(function (key) {\n    var hook = hooks[key]; // ref objects should be passed straight through without wrapping\n\n    if (key.endsWith('Ref')) {\n      wrappedHooks[key] = hooks[key];\n    } else {\n      var wrappedHook_1 = wrapHookToRecognizeElement(hook);\n\n      wrappedHooks[key] = function () {\n        return wrappedHook_1;\n      };\n    }\n  });\n  return wrappedHooks;\n}\n\nexports.default = wrapConnectorHooks;","map":{"version":3,"names":["Object","defineProperty","exports","value","react_1","require","cloneWithRef_1","throwIfCompositeComponentElement","element","type","displayName","name","Error","wrapHookToRecognizeElement","hook","elementOrNode","options","isValidElement","node","ref","default","wrapConnectorHooks","hooks","wrappedHooks","keys","forEach","key","endsWith","wrappedHook_1"],"sources":["C:/Users/rytways/Downloads/simple-kanban-board/node_modules/react-dnd/lib/cjs/wrapConnectorHooks.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar cloneWithRef_1 = require(\"./utils/cloneWithRef\");\nrequire(\"./utils/polyfills/endsWith\");\nfunction throwIfCompositeComponentElement(element) {\n    // Custom components can no longer be wrapped directly in React DnD 2.0\n    // so that we don't need to depend on findDOMNode() from react-dom.\n    if (typeof element.type === 'string') {\n        return;\n    }\n    var displayName = element.type.displayName || element.type.name || 'the component';\n    throw new Error('Only native element nodes can now be passed to React DnD connectors.' +\n        (\"You can either wrap \" + displayName + \" into a <div>, or turn it into a \") +\n        'drag source or a drop target itself.');\n}\nfunction wrapHookToRecognizeElement(hook) {\n    return function (elementOrNode, options) {\n        if (elementOrNode === void 0) { elementOrNode = null; }\n        if (options === void 0) { options = null; }\n        // When passed a node, call the hook straight away.\n        if (!react_1.isValidElement(elementOrNode)) {\n            var node = elementOrNode;\n            hook(node, options);\n            // return the node so it can be chained (e.g. when within callback refs\n            // <div ref={node => connectDragSource(connectDropTarget(node))}/>\n            return node;\n        }\n        // If passed a ReactElement, clone it and attach this function as a ref.\n        // This helps us achieve a neat API where user doesn't even know that refs\n        // are being used under the hood.\n        var element = elementOrNode;\n        throwIfCompositeComponentElement(element);\n        // When no options are passed, use the hook directly\n        var ref = options ? function (node) { return hook(node, options); } : hook;\n        return cloneWithRef_1.default(element, ref);\n    };\n}\nfunction wrapConnectorHooks(hooks) {\n    var wrappedHooks = {};\n    Object.keys(hooks).forEach(function (key) {\n        var hook = hooks[key];\n        // ref objects should be passed straight through without wrapping\n        if (key.endsWith('Ref')) {\n            wrappedHooks[key] = hooks[key];\n        }\n        else {\n            var wrappedHook_1 = wrapHookToRecognizeElement(hook);\n            wrappedHooks[key] = function () { return wrappedHook_1; };\n        }\n    });\n    return wrappedHooks;\n}\nexports.default = wrapConnectorHooks;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,sBAAD,CAA5B;;AACAA,OAAO,CAAC,4BAAD,CAAP;;AACA,SAASE,gCAAT,CAA0CC,OAA1C,EAAmD;EAC/C;EACA;EACA,IAAI,OAAOA,OAAO,CAACC,IAAf,KAAwB,QAA5B,EAAsC;IAClC;EACH;;EACD,IAAIC,WAAW,GAAGF,OAAO,CAACC,IAAR,CAAaC,WAAb,IAA4BF,OAAO,CAACC,IAAR,CAAaE,IAAzC,IAAiD,eAAnE;EACA,MAAM,IAAIC,KAAJ,CAAU,0EACX,yBAAyBF,WAAzB,GAAuC,mCAD5B,IAEZ,sCAFE,CAAN;AAGH;;AACD,SAASG,0BAAT,CAAoCC,IAApC,EAA0C;EACtC,OAAO,UAAUC,aAAV,EAAyBC,OAAzB,EAAkC;IACrC,IAAID,aAAa,KAAK,KAAK,CAA3B,EAA8B;MAAEA,aAAa,GAAG,IAAhB;IAAuB;;IACvD,IAAIC,OAAO,KAAK,KAAK,CAArB,EAAwB;MAAEA,OAAO,GAAG,IAAV;IAAiB,CAFN,CAGrC;;;IACA,IAAI,CAACZ,OAAO,CAACa,cAAR,CAAuBF,aAAvB,CAAL,EAA4C;MACxC,IAAIG,IAAI,GAAGH,aAAX;MACAD,IAAI,CAACI,IAAD,EAAOF,OAAP,CAAJ,CAFwC,CAGxC;MACA;;MACA,OAAOE,IAAP;IACH,CAVoC,CAWrC;IACA;IACA;;;IACA,IAAIV,OAAO,GAAGO,aAAd;IACAR,gCAAgC,CAACC,OAAD,CAAhC,CAfqC,CAgBrC;;IACA,IAAIW,GAAG,GAAGH,OAAO,GAAG,UAAUE,IAAV,EAAgB;MAAE,OAAOJ,IAAI,CAACI,IAAD,EAAOF,OAAP,CAAX;IAA6B,CAAlD,GAAqDF,IAAtE;IACA,OAAOR,cAAc,CAACc,OAAf,CAAuBZ,OAAvB,EAAgCW,GAAhC,CAAP;EACH,CAnBD;AAoBH;;AACD,SAASE,kBAAT,CAA4BC,KAA5B,EAAmC;EAC/B,IAAIC,YAAY,GAAG,EAAnB;EACAvB,MAAM,CAACwB,IAAP,CAAYF,KAAZ,EAAmBG,OAAnB,CAA2B,UAAUC,GAAV,EAAe;IACtC,IAAIZ,IAAI,GAAGQ,KAAK,CAACI,GAAD,CAAhB,CADsC,CAEtC;;IACA,IAAIA,GAAG,CAACC,QAAJ,CAAa,KAAb,CAAJ,EAAyB;MACrBJ,YAAY,CAACG,GAAD,CAAZ,GAAoBJ,KAAK,CAACI,GAAD,CAAzB;IACH,CAFD,MAGK;MACD,IAAIE,aAAa,GAAGf,0BAA0B,CAACC,IAAD,CAA9C;;MACAS,YAAY,CAACG,GAAD,CAAZ,GAAoB,YAAY;QAAE,OAAOE,aAAP;MAAuB,CAAzD;IACH;EACJ,CAVD;EAWA,OAAOL,YAAP;AACH;;AACDrB,OAAO,CAACkB,OAAR,GAAkBC,kBAAlB"},"metadata":{},"sourceType":"script"}