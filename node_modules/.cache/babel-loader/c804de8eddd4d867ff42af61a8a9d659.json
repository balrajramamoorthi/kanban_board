{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar matchesType_1 = require(\"./utils/matchesType\");\n\nvar coords_1 = require(\"./utils/coords\");\n\nvar dirtiness_1 = require(\"./utils/dirtiness\");\n\nvar invariant = require('invariant');\n\nvar DragDropMonitorImpl =\n/** @class */\nfunction () {\n  function DragDropMonitorImpl(store, registry) {\n    this.store = store;\n    this.registry = registry;\n  }\n\n  DragDropMonitorImpl.prototype.subscribeToStateChange = function (listener, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {\n        handlerIds: undefined\n      };\n    }\n\n    var handlerIds = options.handlerIds;\n    invariant(typeof listener === 'function', 'listener must be a function.');\n    invariant(typeof handlerIds === 'undefined' || Array.isArray(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n    var prevStateId = this.store.getState().stateId;\n\n    var handleChange = function handleChange() {\n      var state = _this.store.getState();\n\n      var currentStateId = state.stateId;\n\n      try {\n        var canSkipListener = currentStateId === prevStateId || currentStateId === prevStateId + 1 && !dirtiness_1.areDirty(state.dirtyHandlerIds, handlerIds);\n\n        if (!canSkipListener) {\n          listener();\n        }\n      } finally {\n        prevStateId = currentStateId;\n      }\n    };\n\n    return this.store.subscribe(handleChange);\n  };\n\n  DragDropMonitorImpl.prototype.subscribeToOffsetChange = function (listener) {\n    var _this = this;\n\n    invariant(typeof listener === 'function', 'listener must be a function.');\n    var previousState = this.store.getState().dragOffset;\n\n    var handleChange = function handleChange() {\n      var nextState = _this.store.getState().dragOffset;\n\n      if (nextState === previousState) {\n        return;\n      }\n\n      previousState = nextState;\n      listener();\n    };\n\n    return this.store.subscribe(handleChange);\n  };\n\n  DragDropMonitorImpl.prototype.canDragSource = function (sourceId) {\n    if (!sourceId) {\n      return false;\n    }\n\n    var source = this.registry.getSource(sourceId);\n    invariant(source, 'Expected to find a valid source.');\n\n    if (this.isDragging()) {\n      return false;\n    }\n\n    return source.canDrag(this, sourceId);\n  };\n\n  DragDropMonitorImpl.prototype.canDropOnTarget = function (targetId) {\n    // undefined on initial render\n    if (!targetId) {\n      return false;\n    }\n\n    var target = this.registry.getTarget(targetId);\n    invariant(target, 'Expected to find a valid target.');\n\n    if (!this.isDragging() || this.didDrop()) {\n      return false;\n    }\n\n    var targetType = this.registry.getTargetType(targetId);\n    var draggedItemType = this.getItemType();\n    return matchesType_1.default(targetType, draggedItemType) && target.canDrop(this, targetId);\n  };\n\n  DragDropMonitorImpl.prototype.isDragging = function () {\n    return Boolean(this.getItemType());\n  };\n\n  DragDropMonitorImpl.prototype.isDraggingSource = function (sourceId) {\n    // undefined on initial render\n    if (!sourceId) {\n      return false;\n    }\n\n    var source = this.registry.getSource(sourceId, true);\n    invariant(source, 'Expected to find a valid source.');\n\n    if (!this.isDragging() || !this.isSourcePublic()) {\n      return false;\n    }\n\n    var sourceType = this.registry.getSourceType(sourceId);\n    var draggedItemType = this.getItemType();\n\n    if (sourceType !== draggedItemType) {\n      return false;\n    }\n\n    return source.isDragging(this, sourceId);\n  };\n\n  DragDropMonitorImpl.prototype.isOverTarget = function (targetId, options) {\n    if (options === void 0) {\n      options = {\n        shallow: false\n      };\n    } // undefined on initial render\n\n\n    if (!targetId) {\n      return false;\n    }\n\n    var shallow = options.shallow;\n\n    if (!this.isDragging()) {\n      return false;\n    }\n\n    var targetType = this.registry.getTargetType(targetId);\n    var draggedItemType = this.getItemType();\n\n    if (draggedItemType && !matchesType_1.default(targetType, draggedItemType)) {\n      return false;\n    }\n\n    var targetIds = this.getTargetIds();\n\n    if (!targetIds.length) {\n      return false;\n    }\n\n    var index = targetIds.indexOf(targetId);\n\n    if (shallow) {\n      return index === targetIds.length - 1;\n    } else {\n      return index > -1;\n    }\n  };\n\n  DragDropMonitorImpl.prototype.getItemType = function () {\n    return this.store.getState().dragOperation.itemType;\n  };\n\n  DragDropMonitorImpl.prototype.getItem = function () {\n    return this.store.getState().dragOperation.item;\n  };\n\n  DragDropMonitorImpl.prototype.getSourceId = function () {\n    return this.store.getState().dragOperation.sourceId;\n  };\n\n  DragDropMonitorImpl.prototype.getTargetIds = function () {\n    return this.store.getState().dragOperation.targetIds;\n  };\n\n  DragDropMonitorImpl.prototype.getDropResult = function () {\n    return this.store.getState().dragOperation.dropResult;\n  };\n\n  DragDropMonitorImpl.prototype.didDrop = function () {\n    return this.store.getState().dragOperation.didDrop;\n  };\n\n  DragDropMonitorImpl.prototype.isSourcePublic = function () {\n    return this.store.getState().dragOperation.isSourcePublic;\n  };\n\n  DragDropMonitorImpl.prototype.getInitialClientOffset = function () {\n    return this.store.getState().dragOffset.initialClientOffset;\n  };\n\n  DragDropMonitorImpl.prototype.getInitialSourceClientOffset = function () {\n    return this.store.getState().dragOffset.initialSourceClientOffset;\n  };\n\n  DragDropMonitorImpl.prototype.getClientOffset = function () {\n    return this.store.getState().dragOffset.clientOffset;\n  };\n\n  DragDropMonitorImpl.prototype.getSourceClientOffset = function () {\n    return coords_1.getSourceClientOffset(this.store.getState().dragOffset);\n  };\n\n  DragDropMonitorImpl.prototype.getDifferenceFromInitialOffset = function () {\n    return coords_1.getDifferenceFromInitialOffset(this.store.getState().dragOffset);\n  };\n\n  return DragDropMonitorImpl;\n}();\n\nexports.default = DragDropMonitorImpl;","map":{"version":3,"names":["Object","defineProperty","exports","value","matchesType_1","require","coords_1","dirtiness_1","invariant","DragDropMonitorImpl","store","registry","prototype","subscribeToStateChange","listener","options","_this","handlerIds","undefined","Array","isArray","prevStateId","getState","stateId","handleChange","state","currentStateId","canSkipListener","areDirty","dirtyHandlerIds","subscribe","subscribeToOffsetChange","previousState","dragOffset","nextState","canDragSource","sourceId","source","getSource","isDragging","canDrag","canDropOnTarget","targetId","target","getTarget","didDrop","targetType","getTargetType","draggedItemType","getItemType","default","canDrop","Boolean","isDraggingSource","isSourcePublic","sourceType","getSourceType","isOverTarget","shallow","targetIds","getTargetIds","length","index","indexOf","dragOperation","itemType","getItem","item","getSourceId","getDropResult","dropResult","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","clientOffset","getSourceClientOffset","getDifferenceFromInitialOffset"],"sources":["C:/Users/rytways/Downloads/simple-kanban-board/node_modules/dnd-core/lib/cjs/DragDropMonitorImpl.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matchesType_1 = require(\"./utils/matchesType\");\nvar coords_1 = require(\"./utils/coords\");\nvar dirtiness_1 = require(\"./utils/dirtiness\");\nvar invariant = require('invariant');\nvar DragDropMonitorImpl = /** @class */ (function () {\n    function DragDropMonitorImpl(store, registry) {\n        this.store = store;\n        this.registry = registry;\n    }\n    DragDropMonitorImpl.prototype.subscribeToStateChange = function (listener, options) {\n        var _this = this;\n        if (options === void 0) { options = { handlerIds: undefined }; }\n        var handlerIds = options.handlerIds;\n        invariant(typeof listener === 'function', 'listener must be a function.');\n        invariant(typeof handlerIds === 'undefined' || Array.isArray(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n        var prevStateId = this.store.getState().stateId;\n        var handleChange = function () {\n            var state = _this.store.getState();\n            var currentStateId = state.stateId;\n            try {\n                var canSkipListener = currentStateId === prevStateId ||\n                    (currentStateId === prevStateId + 1 &&\n                        !dirtiness_1.areDirty(state.dirtyHandlerIds, handlerIds));\n                if (!canSkipListener) {\n                    listener();\n                }\n            }\n            finally {\n                prevStateId = currentStateId;\n            }\n        };\n        return this.store.subscribe(handleChange);\n    };\n    DragDropMonitorImpl.prototype.subscribeToOffsetChange = function (listener) {\n        var _this = this;\n        invariant(typeof listener === 'function', 'listener must be a function.');\n        var previousState = this.store.getState().dragOffset;\n        var handleChange = function () {\n            var nextState = _this.store.getState().dragOffset;\n            if (nextState === previousState) {\n                return;\n            }\n            previousState = nextState;\n            listener();\n        };\n        return this.store.subscribe(handleChange);\n    };\n    DragDropMonitorImpl.prototype.canDragSource = function (sourceId) {\n        if (!sourceId) {\n            return false;\n        }\n        var source = this.registry.getSource(sourceId);\n        invariant(source, 'Expected to find a valid source.');\n        if (this.isDragging()) {\n            return false;\n        }\n        return source.canDrag(this, sourceId);\n    };\n    DragDropMonitorImpl.prototype.canDropOnTarget = function (targetId) {\n        // undefined on initial render\n        if (!targetId) {\n            return false;\n        }\n        var target = this.registry.getTarget(targetId);\n        invariant(target, 'Expected to find a valid target.');\n        if (!this.isDragging() || this.didDrop()) {\n            return false;\n        }\n        var targetType = this.registry.getTargetType(targetId);\n        var draggedItemType = this.getItemType();\n        return (matchesType_1.default(targetType, draggedItemType) && target.canDrop(this, targetId));\n    };\n    DragDropMonitorImpl.prototype.isDragging = function () {\n        return Boolean(this.getItemType());\n    };\n    DragDropMonitorImpl.prototype.isDraggingSource = function (sourceId) {\n        // undefined on initial render\n        if (!sourceId) {\n            return false;\n        }\n        var source = this.registry.getSource(sourceId, true);\n        invariant(source, 'Expected to find a valid source.');\n        if (!this.isDragging() || !this.isSourcePublic()) {\n            return false;\n        }\n        var sourceType = this.registry.getSourceType(sourceId);\n        var draggedItemType = this.getItemType();\n        if (sourceType !== draggedItemType) {\n            return false;\n        }\n        return source.isDragging(this, sourceId);\n    };\n    DragDropMonitorImpl.prototype.isOverTarget = function (targetId, options) {\n        if (options === void 0) { options = { shallow: false }; }\n        // undefined on initial render\n        if (!targetId) {\n            return false;\n        }\n        var shallow = options.shallow;\n        if (!this.isDragging()) {\n            return false;\n        }\n        var targetType = this.registry.getTargetType(targetId);\n        var draggedItemType = this.getItemType();\n        if (draggedItemType && !matchesType_1.default(targetType, draggedItemType)) {\n            return false;\n        }\n        var targetIds = this.getTargetIds();\n        if (!targetIds.length) {\n            return false;\n        }\n        var index = targetIds.indexOf(targetId);\n        if (shallow) {\n            return index === targetIds.length - 1;\n        }\n        else {\n            return index > -1;\n        }\n    };\n    DragDropMonitorImpl.prototype.getItemType = function () {\n        return this.store.getState().dragOperation.itemType;\n    };\n    DragDropMonitorImpl.prototype.getItem = function () {\n        return this.store.getState().dragOperation.item;\n    };\n    DragDropMonitorImpl.prototype.getSourceId = function () {\n        return this.store.getState().dragOperation.sourceId;\n    };\n    DragDropMonitorImpl.prototype.getTargetIds = function () {\n        return this.store.getState().dragOperation.targetIds;\n    };\n    DragDropMonitorImpl.prototype.getDropResult = function () {\n        return this.store.getState().dragOperation.dropResult;\n    };\n    DragDropMonitorImpl.prototype.didDrop = function () {\n        return this.store.getState().dragOperation.didDrop;\n    };\n    DragDropMonitorImpl.prototype.isSourcePublic = function () {\n        return this.store.getState().dragOperation.isSourcePublic;\n    };\n    DragDropMonitorImpl.prototype.getInitialClientOffset = function () {\n        return this.store.getState().dragOffset.initialClientOffset;\n    };\n    DragDropMonitorImpl.prototype.getInitialSourceClientOffset = function () {\n        return this.store.getState().dragOffset.initialSourceClientOffset;\n    };\n    DragDropMonitorImpl.prototype.getClientOffset = function () {\n        return this.store.getState().dragOffset.clientOffset;\n    };\n    DragDropMonitorImpl.prototype.getSourceClientOffset = function () {\n        return coords_1.getSourceClientOffset(this.store.getState().dragOffset);\n    };\n    DragDropMonitorImpl.prototype.getDifferenceFromInitialOffset = function () {\n        return coords_1.getDifferenceFromInitialOffset(this.store.getState().dragOffset);\n    };\n    return DragDropMonitorImpl;\n}());\nexports.default = DragDropMonitorImpl;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}