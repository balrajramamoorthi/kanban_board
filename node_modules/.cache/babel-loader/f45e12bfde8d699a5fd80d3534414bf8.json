{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar wrapConnectorHooks_1 = require(\"./wrapConnectorHooks\");\n\nvar isRef_1 = require(\"./utils/isRef\");\n\nvar shallowEqual = require('shallowequal');\n\nvar TargetConnector =\n/** @class */\nfunction () {\n  function TargetConnector(backend) {\n    var _this = this;\n\n    this.backend = backend;\n    this.hooks = wrapConnectorHooks_1.default({\n      dropTarget: function dropTarget(node, options) {\n        _this.dropTargetOptions = options;\n\n        if (isRef_1.isRef(node)) {\n          _this.dropTargetRef = node;\n        } else {\n          _this.dropTargetNode = node;\n        }\n\n        _this.reconnect();\n      }\n    });\n    this.handlerId = null; // The drop target may either be attached via ref or connect function\n\n    this.dropTargetRef = null;\n    this.dropTargetOptionsInternal = null;\n    this.lastConnectedHandlerId = null;\n    this.lastConnectedDropTarget = null;\n    this.lastConnectedDropTargetOptions = null;\n  }\n\n  Object.defineProperty(TargetConnector.prototype, \"connectTarget\", {\n    get: function get() {\n      return this.dropTarget;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TargetConnector.prototype.reconnect = function () {\n    // if nothing has changed then don't resubscribe\n    var didChange = this.didHandlerIdChange() || this.didDropTargetChange() || this.didOptionsChange();\n\n    if (didChange) {\n      this.disconnectDropTarget();\n    }\n\n    var dropTarget = this.dropTarget;\n\n    if (!this.handlerId) {\n      return;\n    }\n\n    if (!dropTarget) {\n      this.lastConnectedDropTarget = dropTarget;\n      return;\n    }\n\n    if (didChange) {\n      this.lastConnectedHandlerId = this.handlerId;\n      this.lastConnectedDropTarget = dropTarget;\n      this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n      this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n    }\n  };\n\n  TargetConnector.prototype.receiveHandlerId = function (newHandlerId) {\n    if (newHandlerId === this.handlerId) {\n      return;\n    }\n\n    this.handlerId = newHandlerId;\n    this.reconnect();\n  };\n\n  Object.defineProperty(TargetConnector.prototype, \"dropTargetOptions\", {\n    get: function get() {\n      return this.dropTargetOptionsInternal;\n    },\n    set: function set(options) {\n      this.dropTargetOptionsInternal = options;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TargetConnector.prototype.didHandlerIdChange = function () {\n    return this.lastConnectedHandlerId !== this.handlerId;\n  };\n\n  TargetConnector.prototype.didDropTargetChange = function () {\n    return this.lastConnectedDropTarget !== this.dropTarget;\n  };\n\n  TargetConnector.prototype.didOptionsChange = function () {\n    return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n  };\n\n  TargetConnector.prototype.disconnectDropTarget = function () {\n    if (this.unsubscribeDropTarget) {\n      this.unsubscribeDropTarget();\n      this.unsubscribeDropTarget = undefined;\n    }\n  };\n\n  Object.defineProperty(TargetConnector.prototype, \"dropTarget\", {\n    get: function get() {\n      return this.dropTargetNode || this.dropTargetRef && this.dropTargetRef.current;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return TargetConnector;\n}();\n\nexports.default = TargetConnector;","map":{"version":3,"names":["Object","defineProperty","exports","value","wrapConnectorHooks_1","require","isRef_1","shallowEqual","TargetConnector","backend","_this","hooks","default","dropTarget","node","options","dropTargetOptions","isRef","dropTargetRef","dropTargetNode","reconnect","handlerId","dropTargetOptionsInternal","lastConnectedHandlerId","lastConnectedDropTarget","lastConnectedDropTargetOptions","prototype","get","enumerable","configurable","didChange","didHandlerIdChange","didDropTargetChange","didOptionsChange","disconnectDropTarget","unsubscribeDropTarget","connectDropTarget","receiveHandlerId","newHandlerId","set","undefined","current"],"sources":["C:/Users/rytways/Downloads/simple-kanban-board/node_modules/react-dnd/lib/cjs/TargetConnector.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar wrapConnectorHooks_1 = require(\"./wrapConnectorHooks\");\nvar isRef_1 = require(\"./utils/isRef\");\nvar shallowEqual = require('shallowequal');\nvar TargetConnector = /** @class */ (function () {\n    function TargetConnector(backend) {\n        var _this = this;\n        this.backend = backend;\n        this.hooks = wrapConnectorHooks_1.default({\n            dropTarget: function (node, options) {\n                _this.dropTargetOptions = options;\n                if (isRef_1.isRef(node)) {\n                    _this.dropTargetRef = node;\n                }\n                else {\n                    _this.dropTargetNode = node;\n                }\n                _this.reconnect();\n            },\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dropTargetRef = null;\n        this.dropTargetOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDropTarget = null;\n        this.lastConnectedDropTargetOptions = null;\n    }\n    Object.defineProperty(TargetConnector.prototype, \"connectTarget\", {\n        get: function () {\n            return this.dropTarget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TargetConnector.prototype.reconnect = function () {\n        // if nothing has changed then don't resubscribe\n        var didChange = this.didHandlerIdChange() ||\n            this.didDropTargetChange() ||\n            this.didOptionsChange();\n        if (didChange) {\n            this.disconnectDropTarget();\n        }\n        var dropTarget = this.dropTarget;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dropTarget) {\n            this.lastConnectedDropTarget = dropTarget;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDropTarget = dropTarget;\n            this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n            this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n        }\n    };\n    TargetConnector.prototype.receiveHandlerId = function (newHandlerId) {\n        if (newHandlerId === this.handlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    };\n    Object.defineProperty(TargetConnector.prototype, \"dropTargetOptions\", {\n        get: function () {\n            return this.dropTargetOptionsInternal;\n        },\n        set: function (options) {\n            this.dropTargetOptionsInternal = options;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TargetConnector.prototype.didHandlerIdChange = function () {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    };\n    TargetConnector.prototype.didDropTargetChange = function () {\n        return this.lastConnectedDropTarget !== this.dropTarget;\n    };\n    TargetConnector.prototype.didOptionsChange = function () {\n        return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n    };\n    TargetConnector.prototype.disconnectDropTarget = function () {\n        if (this.unsubscribeDropTarget) {\n            this.unsubscribeDropTarget();\n            this.unsubscribeDropTarget = undefined;\n        }\n    };\n    Object.defineProperty(TargetConnector.prototype, \"dropTarget\", {\n        get: function () {\n            return (this.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TargetConnector;\n}());\nexports.default = TargetConnector;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}